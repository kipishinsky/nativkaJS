// кнопка старт
let $start = document.querySelector('#start') // то что начинается через $ является Node(тоесть мы забираем ее с помощью функции querySelector, в нее мы ложим id через # - start. start id берем из html файла, который прикручен к кнопке (button)

let $game = document.querySelector('#game') // то что начинается через $ является Node(тоесть мы забираем ее с помощью функции querySelector, в нее мы ложим id через # - game. game id берем из html файла, который прикручен к диву (div)

/*
вешаем прослушку на клик (  (addEventListener) 'click'.
как только по кнопке кликнули, мы запускаем функцию startGame
*/
$start.addEventListener('click', startGame)
/*
отлавливаем клик непосредственно по нажимаемому квадрату.
вешаем прослушку addEventListener на клик на div game.
если в общем блоке гейм фокус будет попадать на нужный квадрат,
то будем запускать функцию handBoxClick ( кликнул рукой на квадрат )
*/
$game.addEventListener('click',handBoxClick)

/*
тут будем хранить значение, равное тому, сколько раз мы кликнули на квадрат
 */
let score = 0;

/*
функция которая запускается на клике при прослушке $start.addEventListener('click', startGame)
*/
function startGame() { /*
при запуске функции свойства ниже подменяются при
помощи js и css свойства видны по новому
*/
    $game.style.backgroundColor = '#fff' /*
    меняем фон при запуске на белый,
    путем подмены квадратов
    */
    $start.classList.add('hide') /*
    скрываем кнопку старт при запуске игры с помощью добавления
    класса hide (hide описан в css файле)
    */
    renderBox() /*
    при старте игры будем вызывать дополнительно
    функцию(без параметров)  в нашу функцию
    */
}

// функция, которая генерирует квадрат с определенными параметрами
function renderBox() {

    $game.innerHtml = '' /*

    https://innerhtml.ru/

    чтобы не дублировать нажатия по квадрату в консоли,
    после каждого нажатия на квадрат, каждое последующее
    значение мы будем удалять, по средствам полного
    удаления содержимое контейнера game
    */

    let box = document.createElement('div') // создаем новый тег div в нашей функции, который как раз будет появляться в виде квадрата

    //ниже указаны стили для квадрата (box)

    box.style.height = box.style.width = '50px' // высота = ширине = 50рх
    box.style.position = 'absolute' /*
    не выбегает из границ основного квадрата.
    (положение квадрата box будет вычислять относительно квадрата (div елемента) let $game )
    Свойство position — позволяет установить или изменить положение элемента
    */
    box.style.backgroundColor = '#000' // квадрат будет черного цвета

    // положение блока относительно родительского блока
    box.style.top = '50px' // сверху отступить 50px
    box.style.left = '70px' // слева отступить 70px

    /* добавляем динамики курсору,
    чтобы при наведении стрелка сменялась на руку (наведение),
    чтобы пользователь понимал, что по нему можно кликнуть
    */
    box.style.cursor = 'pointer'

    box.setAttribute('data-box', true) /*
     вешает на каждый новый сгенерированный квадрат свой атрибут data-box = 'true'
     */

  /*  создаем функцию, которая будет передавать созданный нами элемент в DOM дерево
    первым параметром мы передаем позицию, в данном случае передаем после основного блока
    вторым параметром мы указываем что передаем
    - а передаем мы новый блок созданный нами внутри функции этой функции под названием box
   */
    $game.insertAdjacentElement('afterbegin', box)

}

/*
вызываем функцию, которая вызывается при клике на генерируемый квадрат
* */
function handBoxClick (event) { /*
event - отлавливает значение квадрата (data-box = 'true') из функции renderBox(),
при помощи дата атрибута box.setAttribute('data-box', true),
который вешает на каждый новый сгенерированный квадрат свой
атрибут data-box = 'true'( при том в консоле data уже отбрасыватся и в свойствах висит
так: box: true
*/
    if (event.target.dataset.box) { /*

          если в дата поле присутствует объект у которого есть ключ бокс, то
          это означает, что мы сделали клик именно по квадрату

          тема делегирования событий
          использовать event.target чтобы получить элемент, на котором произошло событие
          Чтобы получить data-атрибут можно взять свойство объекта dataset с именем,
          равным части имени атрибута после data- ( event.dataset.box )
          */
      score++ /*
       увеличить счет на 1
       */
      renderBox()/*
       запустить функцию, чтобы занова сгенерировать новый квадрат
       */
    }
}



